apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  selector:
    matchLabels:
      app: jenkins
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 10.233.0.1
          - 10.233.0.3
          - 8.8.8.8
        searches:
          - cluster.local
          - svc.cluster.local
#          - default.svc.cluster.local
#        options:
#          - name: single-request-reopen
#      hostAliases:
#        - ip: 10.233.0.3
#        - ip: 8.8.8.8
#          hostnames:
#            - dns.google.local
#            - dns8.google.local
#        - ip: 8.8.4.4
#          hostnames:
#            - dns4.google.local
      containers:
      - name: jenkins
        image: alsxs/cikoriy23033
        imagePullPolicy: IfNotPresent
        env:
        - name: JAVA_OPTS
          value: -Xmx2048m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 50000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins
      restartPolicy: Always
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: jenkins
        persistentVolumeClaim:
          claimName: jenkins-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  type: LoadBalancer
  ports:
    - name: ui
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: agent
      port: 50000
      protocol: TCP
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: jenkins