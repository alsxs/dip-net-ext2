pipeline {
    agent {
        kubernetes{
            label 'agent'
        }
    }
    properties([
      pipelineTriggers([
       [$class: 'GenericTrigger',
        genericVariables: [
         [ key: 'committer_name', value: '$.actor.displayName' ],
         [ key: 'ref', value: '$.changes[0].refId'],
         [ key: 'tag', value: '$.changes[0].refId', regexpFilter: 'refs/tags/'],
         [ key: 'commit', value: '$.changes[0].toHash' ],
         [ key: 'project_key', value: '$.repository.project.key' ],
         [ key: 'clone_url', value: '$.repository.links.clone[0].href' ]
        ],
        causeString: '$committer_name pushed tag $tag to $clone_url referencing $commit',

        printContributedVariables: true,
        printPostContent: true,

        regexpFilterText: '$ref',
        regexpFilterExpression: '^refs/tags/.*'
       ]
      ])
     ])
    environment {
		DOCKERHUB_CREDENTIALS=credentials('879885ca-4b90-4633-8803-9d6dbe8d7c53')
	}


    stages {

	    stage('gitclone') {
            when {
                branch 'main'
            }
			steps {

			    echo " ============== gitclone =================="
				git 'https://github.com/alsxs/dip-net-ext2.git'
			}
		}

		stage('Build') {

			steps {
			    echo " ============== Build =================="
			    dir ('app') {
			        sh 'git checkout $commit'
				    sh 'sudo docker build -t alsxs/nginx:app_v$tag .'
				}
			}
		}

		stage('Login + push') {

			steps {
			    echo " ============== Dockerhub login + push =================="
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | sudo docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
				sh 'sudo docker tag alsxs/nginx:app_v$tag alsxs/nginx:app_v$tag'
				sh 'sudo docker push alsxs/nginx:app_v$tag'
			}
		}

		stage('Kubernetes') {
            steps {
                echo " ============== Change app-deploy =================="
                withKubeConfig([credentialsId: 'e098f8f3-4d8d-4977-8055-8cdc1341ab55',
                    serverUrl: 'https://kubernetes.default:443',
                    contextName: 'kubernetes-admin@cluster.local',
                    clusterName: 'cluster.local',
                    namespace: 'default'
                    ]) {
                        sh 'kubectl delete deploy app-dip'
                        sh 'kubectl create deployment app-dip --image=alsxs/nginx:app_v$tag --port=80'
                        sh 'kubectl scale deployment app-dip --replicas 3'
                }
            }
        }
    }
}




